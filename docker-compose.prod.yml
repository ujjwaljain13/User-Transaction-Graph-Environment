version: '3'

services:
  neo4j:
    image: neo4j:latest
    container_name: graph-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - graph-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: graph-backend
    ports:
      - "8000:8000"  # Backend API
    depends_on:
      - neo4j
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=7687
      - AUTO_INIT_DB=true  # Set to true to auto-initialize the database on startup
    networks:
      - graph-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: graph-frontend
    ports:
      - "5001:5001"  # Frontend
    depends_on:
      - backend
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000
    networks:
      - graph-network
    restart: unless-stopped

networks:
  graph-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
